"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"someSidebar":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Introduction","href":"/SymphonyQL/docs/","docId":"intro"},{"type":"link","label":"Quick Start - Java","href":"/SymphonyQL/docs/quickstart-java","docId":"quickstart-java"},{"type":"link","label":"Quick Start - Scala","href":"/SymphonyQL/docs/quickstart-scala","docId":"quickstart-scala"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Guides","items":[{"type":"link","label":"Installing","href":"/SymphonyQL/docs/installation","docId":"installation"},{"type":"link","label":"Defining the Schema - Java","href":"/SymphonyQL/docs/schema-java","docId":"schema-java"},{"type":"link","label":"Schema Specification","href":"/SymphonyQL/docs/schema","docId":"schema"}],"collapsed":true,"collapsible":true}]},"docs":{"installation":{"id":"installation","title":"Installing SymphonyQL","description":"SymphonyQL only supports Scala3 and Java21.","sidebar":"someSidebar"},"intro":{"id":"intro","title":"Introduction","description":"SymphonyQL allows you to write GraphQL servers for both Scala and Java built in the same way. It is built at the top of the pekko-streams.","sidebar":"someSidebar"},"quickstart-java":{"id":"quickstart-java","title":"Quick Start - Java","description":"This guide gets you started with SymphonyQL with a simple working example on Java.","sidebar":"someSidebar"},"quickstart-scala":{"id":"quickstart-scala","title":"Quick Start - Scala","description":"This guide gets you started with SymphonyQL with a simple working example on Scala.","sidebar":"someSidebar"},"schema":{"id":"schema","title":"Schema Specification","description":"A SymphonyQL schema will be generated automatically at compile-time from the types present in your resolver.","sidebar":"someSidebar"},"schema-java":{"id":"schema-java","title":"Defining the Schema - Java","description":"In Java, there is no metaprogramming, we use APT (Java Annotation Processing) to generate codes.","sidebar":"someSidebar"}}}')}}]);