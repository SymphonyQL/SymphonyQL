name: CI

on:
  push:
    branches:
      - main
    tags: [ "*" ]
  pull_request:
    branches:
      - main

jobs:
  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 11 ]
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Cache scala dependencies
        uses: coursier/cache-action@v6

      - name: Checking Code style
        run: sbt check
  
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Run Test
        if: success() || failure()
        run: sbt coverage test

      - name: Aggregate coverage report
        run: sbt coverageAggregate

      - name: Upload test coverage report
        run: bash <(curl -s https://codecov.io/bash)
  
#  publish:
#    runs-on: ubuntu-20.04
#    needs: [ check ]
#    if: github.event_name != 'pull_request'
#    steps:
#      - name: Checkout current branch
#        uses: actions/checkout@v3.3.0
#        with:
#          fetch-depth: 0
#      - name: Setup JDK
#        uses: actions/setup-java@v1
#        with:
#          java-version: 11
#
#      - name: Update docs
#        if: ${{ vars.RUN_ROLLS_MDOC == 'Y' }}
#        run: |
#          git config --global user.name "Rolls Docs"
#          git config --global user.email "568845948@qq.com"
#          eval "$(ssh-agent -s)"
#          echo "$TOKEN" | ssh-add -
#          sbt rolls-docs/mdoc
#          cd website
#          yarn install
#          yarn deploy
#        env:
#          TOKEN: ${{secrets.DEPLOY_KEY}}
#          USE_SSH: true
#          GIT_USER: git
#
#      - name: Release artifacts
#        run: sbt ci-release
#        env:
#          PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
#          PGP_SECRET: ${{ secrets.PGP_SECRET }}
#          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
#          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  
  ci:
    runs-on: ubuntu-20.04
    needs: [ check, test ]
    steps:
      - name: Aggregate outcomes
        run: echo "build succeeded"          
